@model Reader.Web.Models.ItemsViewModel
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.item').click(function (e) {
                $('#content').scrollTo(this);
                setActiveItem($(this));
            });
        });

        $("#toggle-add").click(function () {
            $('#add-feed').toggle('fast');
        });

        $(".alert").delay(5000).fadeOut('slow');

        function setActiveItem(item) {
            // An item is in view, set it as selected and mark it read
            $('.item').removeClass('selected-item');
            item.addClass('selected-item');

            if (item.children("input[name='is-read']").val() != "read") {
                // TODO: Ajax call to set item as read

                // Decrement read counter
            }
        }
    </script>
}
<div id="nav">
    <a href="#" class="button" id="toggle-add">Add feed</a>
    <div id="add-feed" style="display: none;">
        <span class="mini">Paste the feed URL and click add:</span>
        @using (Html.BeginForm("AddFeed", "Default"))
        {
            <input type="text" name="url" />
            <input type="submit" value="Add" />
        }
    </div>
    <div id="feeds">
        <ul>
            @foreach (var feed in Model.Feeds)
            {
                <li class="@(feed.Feed.URL == Model.SelectedFeedURL ? "selected" : "")">
                    <a href="@Url.Action("View", new { feed = feed.Feed.URL })">
                        <div class="favicon">
                            <img height="16" width="16" src="@Url.Content("~/Images/rss_ico.png")" />
                        </div>
                        <div class="name">@Server.UrlDecode(feed.Feed.DisplayName)</div>
                        <div class="unread-count">(@feed.UnreadCount.ToString())</div>
                    </a>
                    <div style="clear: both;"></div>
                </li>
            }
        </ul>
    </div>
</div>
@if (Model.SelectedFeedURL != string.Empty)
{
    <div id="feed-controls">
        <div class="feed-name">@Model.SelectedFeedName</div>
        <div>
            <input type="submit" class="button gray" value="Refresh" name="refresh-button" />
        </div>
        <div>
            <input type="submit" class="button gray" value="Mark All Read" name="markread-button" />
        </div>
        <div>
            <input type="submit" class="button gray" value="Unsubscribe" name="unsubscribe-button" />
        </div>
        <div style="clear: both;"></div>
    </div>
}
<div id="content">
    @if (TempData["Error"] != null)
    {
        <div class="alert error">
            @TempData["Error"]
        </div>
    }
    @if (TempData["Message"] != null)
    {
        <div class="alert message">
            @TempData["Message"]
        </div>
    }
    @foreach (var item in Model.Items)
    {
        if (!item.IsRead)
        {
        <div class="item">
            <input type="hidden" name="item-id" value="@item.ItemID" />
            <input type="hidden" name="is-read" value="@(item.IsRead ? "read" : "")" />
            <input type="hidden" name="is-starred" value="@(item.IsStarred ? "starred" : "")" />
            <h3><a href="@(Server.UrlDecode(item.URL))">@item.Title</a></h3>
            <p class="date">@(item.PublishDate.HasValue ? item.PublishDate.Value.ToString() : string.Empty)</p>
            @Html.Raw(item.Content)
        </div>
        }
    }
</div>
<div class="clear">
</div>
