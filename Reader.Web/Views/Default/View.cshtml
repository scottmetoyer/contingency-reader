@model Reader.Web.Models.ItemsViewModel
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            // Initialize click-to-scroll
            $('#content').on("click", ".item", function (event) {
                $('#content').scrollTo(this);
                selectItem($(this));
            });

            // Intialize infinite scroll
            $('#content').jscroll({
                padding: 100,
                nextSelector: 'a.jscroll-next:last',
                loadingHtml: '<img src="@Url.Content("~/Images/ajax-loader.gif")" alt="Loading" />'
            });

            // Initialize starring
            $('#content').on("click", ".star", function (event) {
                var imagePath = $(this).attr('src');

                if (imagePath.indexOf('star.png') >= 0) {
                    $(this).attr('src', '@Url.Content("~/Images/star_lit.png")');
                    $.post('@Url.Action("Star")', "id=" + $(this).attr("alt") + "&star=true");
                } else {
                    $(this).attr('src', '@Url.Content("~/Images/star.png")');
                    $.post('@Url.Action("Star")', "id=" + $(this).attr("alt") + "&star=false");
                }

                if ($(event.target).is('.star')) {
                    event.stopPropagation();
                    return;
                }
            });

            $("#toggle-add").click(function () {
                $('#add-feed').toggle('fast');
            });

            $(".alert").delay(5000).fadeOut('slow');

            // Keep loading new articles until we have everything or we've triggered the content area overflow
            loadUntilPageFull();
        });

        $.fn.hasOverflow = function () {
            var $this = $(this);
            var $children = $this.find('*');
            var len = $children.length;

            if (len) {
                var maxWidth = 0;
                var maxHeight = 0
                $children.map(function () {
                    maxWidth = Math.max(maxWidth, $(this).outerWidth(true));
                    maxHeight = Math.max(maxHeight, $(this).outerHeight(true));
                });

                return maxWidth > $this.width() || maxHeight > $this.height();
            }

            return false;
        };

        function loadUntilPageFull() {
            if (!($("#content").hasOverflow())) {
                lastItemLink = $("div.item:last").find("a.jscroll-next:last");

                if (lastItemLink) {
                }
            }
            else {
            }
        }

        function selectItem(item) {
            // Side the active item border styling
            $('.item').removeClass('selected-item');
            item.addClass('selected-item');

            // Post to the 'set read' web service
            if (item.children("input[name='is-read']").val() != "read") {
                $.post(
                    '@Url.Action("Read")',
                    "id=" + item.children("input[name='item-id']").val(),
                    function (data) {
                        // Set the item's hidden input read indicator
                        item.children("input[name='is-read']").val("read");

                        // Decrement the unread counter
                        unreadCountElement = $('li.selected-feed').find('.unread-count');

                        if (unreadCountElement) {
                            unreadCount = parseInt(unreadCountElement.text().replace("(", "").replace(")", ""), 10) - 1;
                            unreadCountElement.text("(" + unreadCount + ")");

                            if (unreadCount == 0 || isNaN(unreadCount)) {
                                unreadCountElement.html("&nbsp;");
                            }
                        }
                    });
            }
        }
    </script>
}
<div id="nav">
    <a href="#" class="button" id="toggle-add">Add feed</a>
    <div id="add-feed" style="display: none;">
        <span class="mini">Paste the feed URL and click add:</span>
        @using (Html.BeginForm("Subscribe", "Default"))
        {
            <input type="text" name="url" />
            <input type="submit" value="Add" />
        }
    </div>
    <div id="feeds">
        <ul>
            @foreach (var feed in Model.Feeds)
            {
                <li class="@(feed.Selected == true ? "selected-feed" : "")">
                    <a href="@Url.Action("View", new { feed = feed.Feed.URL })">
                        <div class="favicon">
                            <img height="16" width="16" src="@Url.Action("FeedImage", new { id = feed.Feed.FeedID })" />
                        </div>
                        <div class="name">@Server.UrlDecode(feed.Feed.DisplayName)</div>
                        <div class="unread-count">@(feed.UnreadCount == 0 ? "" : "(" + feed.UnreadCount.ToString() + ")")&nbsp;</div>
                    </a>
                    <div style="clear: both;"></div>
                </li>
            }
            <li style="border-bottom: 1px solid #ebebeb; margin-top: 10px; margin-bottom: 10px;"></li>
            <li class="@(Model.ChannelURL == "starred" ? "selected-feed" : "")">
                <a href="@Url.Action("View", new { feed = "starred" })">
                    <div class="favicon">
                        <img height="16" width="16" src="@Url.Content("~/Images/darkstar.png")" />
                    </div>
                    <div class="name">Starred Items</div>
                    <div class="unread-count">&nbsp;</div>
                </a>
                <div style="clear: both;"></div>

            </li>
        </ul>
    </div>
</div>
<div id="feed-controls">
    @if (string.IsNullOrEmpty(Model.ChannelURL))
    {
        <div class="feed-name">Welcome to Contingency Reader</div>
    }
    else
    {
        if (Model.BlogURL != string.Empty)
        {
        <div class="feed-name"><a href="@Model.BlogURL">@Model.ChannelName</a><span class="light">@Model.LastRefresh</span></div>
        }
        else
        {
        <div class="feed-name">@Model.ChannelName <span class="light">@Model.LastRefresh</span></div>
        }
        
        if (Model.ChannelURL != "starred")
        {
            var selectedFeed = Model.Feeds.FirstOrDefault(x => x.Selected == true).Feed;       
        <div>
            @using (Html.BeginForm("Refresh", "Default"))
            {
                <input type="hidden" name="feedid" value="@selectedFeed.FeedID" />
                <input type="submit" class="button gray" value="Refresh" name="refresh-button" />
            }
        </div>
        <div>
            @using (Html.BeginForm("MarkAllRead", "Default"))
            {
                <input type="hidden" name="feedid" value="@selectedFeed.FeedID" />
                <input type="submit" class="button gray" value="Mark All Read" name="markread-button" onclick="return confirm('Are you sure you want to mark all items read in this feed?')" />
            }
        </div>
        <div>
            @using (Html.BeginForm("Unsubscribe", "Default"))
            {
                <input type="hidden" name="feedid" value="@selectedFeed.FeedID" />
                <input type="submit" class="button gray" value="Unsubscribe" name="unsubscribe-button" onclick="return confirm('Are you sure you want to unsubscribe from this feed?')" />
            }
        </div>
        <div>
            @using (Html.BeginForm("SetViewMode", "Default"))
            {
                <input type="hidden" name="feedid" value="@selectedFeed.FeedID" />
                if (Session["ViewMode"] == null || Session["ViewMode"].ToString() == "Show Unread Items")
                {
                <input type="submit" class="button gray" value="Show All Items" name="mode" />
                }
                else
                {
                <input type="submit" class="button gray" value="Show Unread Items" name="mode" />
                }
            }
        </div>
        }
        <div style="clear: both;"></div>
    }
</div>
<div id="content">
    @foreach (var item in Model.Items)
    {
        @Html.Partial("Item", item)
    }

    @if (string.IsNullOrEmpty(Model.ChannelURL))
    {
        <div class="no-items">
            Select a feed on the left and start reading!
        </div>
    }
    else
    {
        if (Model.Items.Count == 0)
        {
        <div class="no-items">
            Nothing more to read here...
            <br />
            <br />
            <img src="@Url.Content("~/Images/i-should-buy-a-boat-cat.jpg")" alt="boatcat"/>
        </div>
        }
    }
</div>
<div class="clear">
</div>
<div id="footer">
    <a href="http://www.scottmetoyer.com">Scott Metoyer 2013</a> | <a href="@Url.Action("Logout", "Account")">Log out</a>
</div>
